on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  format-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run Biome
        run: npx biome ci .

      - name: Run typecheck
        run: npm run typecheck

  license-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Install lac
        run: npm i -g @brainhubeu/lac

      - name: Run audit
        #Add `--bail 1` flag when it will be available on npm
        run: lac --default-config

  test:
    strategy:
      matrix:
        node: [18, 20, 22]
        os: [ubuntu-latest, macos-latest]
        yarn: [1.22.19, 3.5.1]
        pnpm: [7.30.0, 8.6.0]
    runs-on: ${{ matrix.os }}
    needs: format-and-lint
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install Yarn ${{ matrix.yarn }}
        run: |
          npm install --global yarn@${{ matrix.yarn }}

      - name: Install PNPM ${{ matrix.pnpm }}
        run: |
          npm install --global pnpm@${{ matrix.pnpm }}

      - name: Install dependencies
        run: |
          if [ -f "yarn.lock" ]; then
            yarn install
          elif [ -f "pnpm-lock.yaml" ]; then
            pnpm install
          else
            npm ci
          fi

      - name: Build
        run: npm run build

      - name: Run tests and generate coverage
        run: npm run test:coverage

      - name: Run e2e tests
        run: npm run test:e2e --prefix=test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Required for private repos
          # todo: use lcov-result-merge to combine more results
          files: ./packages/core/coverage/lcov.info
          flags: unit
          fail_ci_if_error: true

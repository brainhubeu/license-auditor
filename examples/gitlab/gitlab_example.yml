# Example implementation of fully working pipeline with License Auditor on Gitlab.

# In this example project consists of two packages Web and Server
# To validate licenses you need to create separate steps for each
# package. As in the example below.

# In order License Auditor to work, dependencies in package needs
# to be installed before running the step with License Auditor

# Gitlab Access Token is required for posting comments to MR. You can use any account
# but is advised to create a separate "bot" account that is going to do that.

# Name of stages
stages:
  - InstallWebDependencies
  - InstallServerDependencies
  - CheckWebLicenses
  - CheckServerLicenses

install_web_dependencies:
  stage: InstallWebDependencies
  image: node:alpine
  script:
    - cd ./packages/web
    - npm install
  artifacts:
    paths:
      - packages/web/node_modules
  only:
    - merge_requests

install_server_dependencies:
  stage: InstallServerDependencies
  image: node:alpine
  script:
    - cd ./packages/server
    - npm install
  artifacts:
    paths:
      - packages/server/node_modules # Relative to dangerfile/project root
  only:
    - merge_requests

# Check licenses in Web package
check_web_licenses:
  stage: CheckWebLicenses
  image: node:alpine
  script:
    - yarn add -D danger license-auditor
    - yarn danger ci --verbose --id Web
  variables:
    DANGER_GITLAB_API_TOKEN: $HAL9002AccessToken # Gitlab Access Token stored in Gitlab env variable.
    PROJECT_PATH: ./packages/web # Relative to dangerfile/project root
  only:
    - merge_requests

# Check licenses in Server package
check_server_licenses:
  stage: CheckServerLicenses
  image: node:alpine
  script:
    - yarn add -D danger license-auditor
    - yarn danger ci --verbose --id Server
  variables:
    DANGER_GITLAB_API_TOKEN: $HAL9002AccessToken # Gitlab Access Token stored in Gitlab env variable.
    PROJECT_PATH: ./packages/server

  only:
    - merge_requests
